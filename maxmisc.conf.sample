########################################
######## CONFIG FILE FOR maxmisc scripts
########################################

# Fill in Universal section and sction related to scripts
# [ saltbox default ] indicates variable is set to the saltbox default already

# TODO convert all to lower case, uniquify certain vars that may clash, source these vars within scripts
# test all scripts
# test variable expansion - all scripts
# build in checks for integers when reqd

########################
# UNIVERSAL SECTION
########################

thisserver="maxical"    # name of this server, eg hetzner01049
myusername="${USER}"    # your user name on this server, eg rimjobsteve
appdir="/opt"           # parent dir of your apps and app data [ saltbox default ]
network="saltbox"       # docker network [ saltbox default ]
backupdrive="mybackups" # rclone config name of your remote backup drive, eg 'google' - used for backups and transfers
donorserver="osiris"    # name of the server app data will be restored from, eg hetzner03169

# URL for apprise notifications, leave as is if notifications not required
webhook_url="https://discord.com/api/webhooks/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# these are auto config, you probably don't need to edit
bkupdir="/home/${myusername}/maxmisc/backups"         # directory for temporary backup data
restoredir="/home/${myusername}/maxmisc/restores"     # directory for temporary restore data
today=$(date '+%Y_%d_%m__%H_%M_%S')                   # date stamp
logsdir="/home/${myusername}/logs"                    # directory for logs
rflags=(--drive-chunk-size=2048M --buffer-size=8192M) # rclone file transfer flags

# some colours
bred="$(tput setaf 9)"   # bright red
yellow="$(tput setaf 3)" # yellow
reset="$(tput sgr0)"     # reset

########################
# PLEX RELATED
########################

#________for pleanse.sh
#________for plex_futures.sh
#________for plex_stuckers.sh
#________for plex_futures_n_stuckers.sh
#________for plex_transfer.sh
#________for plex_unpack.sh

plexdockername="plex"                                              # docker name of instance [ saltbox default ]
plexdir="/opt/plex"                                                # plex top level path containing "Library" [ saltbox default ]
pmspath="/opt/plex/Library/Application Support/Plex Media Server/" # Plex Media Server path [ saltbox default ]
plexdbpath="${pmspath}Plug-in Support/Databases/"                  # database path [ saltbox default ]
plexsql="/opt/plexsql/Plex Media Server"                           # path to plexsql [ saltbox default ]

# plex DB and metadata location, absolute paths
# these are auto config, you probably don't need to edit
plexdb="com.plexapp.plugins.library.db"        # don't change
plexdblocation="${plexdbpath}${plexdb}"        # location of plex database
plexmdlocation="${pmspath}Metadata"            # location of plex metadata
plextrnsfrdb="${bkupdir}/${plexdb}.trnsfrbkup" # location of plex db backupfile for transfer

#________for plex_transfer.sh only
plexservername="imhotep" # name of your plex server - used in filename creation

#________for plex_unpack.sh only
plexbuservername="russell" # name of your plex server to restore FROM- used in filename
bufromserver="hetzner01"   # name of your server to restore FROM, eg hetzner01

########################
# APP INSTALLERS
########################

#________for atrain.sh

atrainname="atrain"     # atrain name
atrainimagetag="latest" # atrain docker tag - unlikely to ever change

# these are auto config, you probably don't need to edit
atrainmntpnt="${appdir}/${atrainname}"      # the directory into which atrain will be installed
atrainconfig="${atrainmntpnt}/a-train.toml" # the atrain config file

#________for cropduster.sh

cropname="crop" # crop name

# auto config, you probably don't need to edit
cropmntpnt="${appdir}/${cropname}" # the directory into which crop will be installed

#________for sarotund.sh
#________for sarotup.sh

sarotatename="sarotate" # sarotate name
sarsysdinst=true        # creates systemd file and enables but does not start, true / false

# these are auto config, you probably don't need to edit
sarotatemntpnt="${appdir}/${sarotatename}"            # the directory into which SARotate will be installed
sarotateconfig="${sarotatemntpnt}/config.yaml.sample" # SARotate config sample
sarlink=$(curl -Ls "https://api.github.com/repos/saltydk/sarotate/releases/latest" | grep browser_download_url | cut -d '"' -f 4)
sarappfile="${sarotatemntpnt}/SARotate" # SARotate app location

########################
# GENERAL UTILITIES
########################

#________for quack.sh

fileslist="filelist.txt" # list of files to backup
filtlist="filtlist.txt"  # list of filters to use
ziplist="ziplist.txt"    # list of dirs to zip for inclusion in backup

# UPLOADER
qakupload=true # upload backup to an rclone remote, true / false

# these are auto config, you probably don't need to edit

qkupdir=${bkupdir}/quack                              # quack backup location for file collection
qaktmpdir="${qkupdir}"/files                          # location for files collection
qakzipsdir="${qkupdir}"/zips                          # location for zips collection
qakbakdir="${qkupdir}"/backups                        # location for bakups
qakinfdir="${qkupdir}"/info                           # location for info
qakfirstrun="${qakinfdir}"/quack.txt                  # first run info
qakbakfile="${qakbakdir}"/config_backup"${TODAY}".zip # location for backup file

# RFLAGS="--drive-chunk-size=2048M --buffer-size 8192M" # THIS IS NOT USED / NOT WORKING

#________for LOGWHIFFER.sh

# Array of log files to watch
# use format:  ["short_nickname"]="/location/of/logfile.log"
declare -A watched_logs=(
    ["crop"]="/opt/crop/activity.log"
    ["cloudplow"]="/opt/cloudplow/cloudplow.log"
    ["autoscan"]="/opt/autoscan/activity.log"

)

# Array of danger strings to look for in log files
# use format:  ["short_nickname"]="string to look for in logs"
declare -A danger_strings=(
    ["Google API 429"]="googleapi: got HTTP response code 429"
    ["ACME cert error"]="Unable to obtain ACME certificate for domains"
    ["fatality"]="fatal"
)

num_lines=100 # Number of lines to tail from a log file

#________for STRAPON.sh

# JUST LEAVE OUT FOR NOW

########
#________for WANCHORS.sh

anchor=audiobooks,td_tv1.bin,td_movies.bin # anchor files, use commas to separate (a directory is also a file)
dir="/mnt/unionfs"                         # location of anchor files
sapps="plex emby jellyfin"                 # docker service apps, separate with spaces.
wanchlog="/home/max/logs/wanch.log"        # logfile

#________for WANCH PLUS.sh

sysapps="rclone_vfs mergerfs munter" # system services, separate with spaces.

########################
# APP TRANSFER or BACKUP
########################

#________for BackupAPP.sh

# Define multiple apps
# three fields separated by |:
# app name, app data directory, and Docker container name
# app data direcotry is expected to be nested in $[appdir] eg ( /opt )
# if app is not using docker then leave container name field blank

apps=(
  "plex|plex|plex"
  "app2|app2_data|app2_docker"
  "app3|app3_data|app3_docker"
)


appname="plex"       # name of your app - used in filename
appdatadir="plex"    # appdir to backup
appdockername="plex" # name of your app docker - to stop and start

#________for RESTORE APP.sh

donorappname="plex"         # name of the app you want restored
restoreappdockername="plex" # name of your app docker - to stop and start

# these are auto config, you probably don't need to edit
donorfilepath=/backups/$donorserver     # Path on rclone remote to the donor file
donorfilename=$donorappname.tar.gz      # Name of file to restore
restoretarget="${appdir}/${appdatadir}" # location app will restore to
